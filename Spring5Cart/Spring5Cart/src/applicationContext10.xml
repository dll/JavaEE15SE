<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        ">
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/spring5cartdb"></property>
		<property name="username" value="root"></property>
		<property name="password" value=""></property>
	</bean>	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>cn/edu/chzu/xxxy/se15/javaee/spring/po/Customer.hbm.xml</value>
			</list>
		</property>
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!-- 定义通知拦截方法 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" read-only="false"/>
			<tx:method name="update*" propagation="REQUIRED" read-only="false"/>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"/>
			<tx:method name="del*" propagation="REQUIRED" read-only="false"/>
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>	
	<!-- 事务拦截切面定义 -->
	<aop:config>
		<aop:pointcut id="allServiceMethod" expression="execution(* cn.edu.chzu.xxxy.se15.javaee.spring.service.*.*(..))" />
		<aop:advisor pointcut-ref="allServiceMethod" advice-ref="txAdvice" />
	</aop:config>
	<bean id="baseDAO" class="cn.edu.chzu.xxxy.se15.javaee.spring.dao.BaseHibernateDAO">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>	
	<bean id="userDAO" class="cn.edu.chzu.xxxy.se15.javaee.spring.dao.CustomerDAO" parent="baseDAO"/>
	
	<bean id="userService" class="cn.edu.chzu.xxxy.se15.javaee.spring.service.UserService">
		<property name="customerDAO" ref="userDAO" />
	</bean>
    <!-- 增强处理定义 -->
	<bean id="logAdvice" class="cn.edu.chzu.xxxy.se15.javaee.spring.advice.LoggingAdvice" />
	<bean id="logInterceptor" class="cn.edu.chzu.xxxy.se15.javaee.spring.advice.LoggingInterceptor" />
	<!--设定代理-->  
    <!--  <bean id="logProxy" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">  
     -->
    <bean id="logProxy" class="org.springframework.aop.framework.ProxyFactoryBean">  
             <!--设定代理的是接口-->
       <property name="proxyInterfaces">  
            <value>cn.edu.chzu.xxxy.se15.javaee.spring.service.IUserService</value>  
        </property>
               <!--设定代理的目标类-->  
        <!-- <property name="beanNames">  
            <value>userService</value>
        </property>   -->
        <property name="target">  
            <ref bean="userService"/>
        </property>  
        <!--设定切入的Advice-->  
        <property name="interceptorNames">  
            <list>  
                <value>logAdvice</value> 
                <value>logInterceptor</value> 
            </list>  
        </property>  
    </bean>
</beans>